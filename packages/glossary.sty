\newglossaryentry{API REST}{
	name={API REST},
	description={\gls{API} que sigue los principios arquitectónicos \gls{REST}, permitiendo interacciones con los recursos usando métodos estándar HTTP}
}

\newglossaryentry{reST}{
	text={reST},
	name={reST (reStructuredText)},
	description={Sintaxis de marcado ligero utilizada para documentación, como docstrings en Python. Más información en la \href{https://docutils.sourceforge.io/rst.html}{documentación oficial}}
}

\newglossaryentry{Python}{
	name={Python},
	description={Lenguaje de programación de propósito general y alto nivel, interpretado y multiparadigma, aunque principalmente orientado a objetos}
}

\newglossaryentry{Pydantic}{
	name={Pydantic},
	description={Librería de Python que facilita la validación y serialización de datos, especialmente útil para trabajar con datos JSON. Más información en su \href{https://docs.pydantic.dev/latest/}{documentación}}
}

\newglossaryentry{FastAPI}{
	name={FastAPI},
	description={Framework moderno, rápido (de alto rendimiento) y fácil de usar para construir APIs con Python basado en las anotaciones de tipo estándar de Python, de acuerdo con su \href{https://fastapi.tiangolo.com/}{documentación}}
}

\newglossaryentry{Swagger}{
	text={Swagger},
	name={Swagger UI},
	description={Herramienta que permite visualizar y probar APIs de manera interactiva utilizando documentación generada automáticamente en formato OpenAPI. Es especialmente útil para explorar y probar endpoints durante el desarrollo. Más información en su \href{https://swagger.io/tools/swagger-ui/}{documentación}}
}

\newglossaryentry{Redoc}{
	name={Redoc},
	description={Herramienta para renderizar documentación de APIs en formato OpenAPI con un diseño limpio y personalizable, orientada a la presentación profesional de la documentación de APIs. Más información en su \href{https://redoc.ly/docs/redoc/}{documentación}}
}

\newglossaryentry{Jupyter}{
	name={Jupyter},
	description={Software de código abierto que permite crear y compartir documentos interactivos que contienen código, visualizaciones y texto explicativo. Más información en su \href{https://jupyter.org/}{página oficial}}
}

\newglossaryentry{docstring}{
	name={docstring},
	description={Cadena de texto especiales que se escriben al inicio de un módulo, clase, método o función en Python, que describe su funcionalidad y cómo usarlo}
}

\newglossaryentry{NumPy}{
	name={NumPy},
	description={\say{El paquete fundamental para la computación científica en Python}, de acuerdo con su \href{https://numpy.org/}{página oficial}. Librería de Python que añade soporte para arreglos y matrices de gran tamaño, junto con una colección de funciones matemáticas para operarlos}
}

\newglossaryentry{Pandas}{
	name={Pandas},
	description={Librería de análisis y manipulación de datos en Python. Más información en su \href{https://pandas.pydata.org/}{página oficial}}
}

\newglossaryentry{Polars}{
	name={Polars},
	description={Librería de manipulación de datos escrita en Rust, con una interfaz de Python. Más información en su \href{https://pola.rs/}{página oficial}}
}

\newglossaryentry{Pytest}{
	name={Pytest},
	description={Framework de pruebas para Python. Más información en su \href{https://docs.pytest.org/en/stable/}{página oficial}}
}

\newglossaryentry{GitHub Actions}{
	name={GitHub Actions},
	description={Servicio de integración continua de GitHub que permite automatizar flujos de trabajo como pruebas y despliegues en repositorios de código fuente. Más información en su \href{https://docs.github.com/en/actions}{documentación}}
}

\newglossaryentry{YAPF}{
	text={YAPF},
	name={YAPF (\textit{Yet Another Python Formatter})},
	description={Formateador de código para Python. Más información en su \href{https://github.com/google/yapf}{repositorio de GitHub}}
}

\newglossaryentry{PEP}{
	text={PEP},
	name={PEP (\textit{Python Enhancement Proposal})},
	description={Documento que propone y describe una nueva característica o modificación en Python. En la \href{https://peps.python.org/pep-0001/}{PEP 1} se define qué es un PEP}
}

\newglossaryentry{NES}{
	text={NES},
	name={NES (No Estás Solo)},
	description={Plataforma web de la Universidad de los Andes para el éxito estudiantil. \url{https://noestassolo.virtual.uniandes.edu.co/}}
}

\newglossaryentry{API}{
	text={API},
	name={API (\textit{Application Programming Interface})},
	description={Mecanismo que permite la interoperabilidad de aplicaciones heterogéneas, permitiendo a un programa acceder a las funciones y datos de otro}
}

\newglossaryentry{AAA}{
	text={AAA},
	name={AAA (\textit{Arrange, Act, Assert})},
	description={Patrón de diseño para escribir pruebas unitarias, que consiste en dividir la prueba en tres partes: la preparación de los datos (\textit{Arrange}), la ejecución del código a probar (\textit{Act}) y la verificación de los resultados (\textit{Assert})}
}


\newglossaryentry{Flake8}{
	name={Flake8},
	description={Herramienta de Python que combina varios linters para verificar el cumplimiento de las guías de estilo de Python. Más información en su \href{https://flake8.pycqa.org/en/latest/}{documentación}}
}

\newglossaryentry{REST}{
	text={REST},
	name={REST (\textit{Representational State Transfer})},
	description={Estilo arquitectónico para sistemas hipermedia distribuidos, como la \textit{World Wide Web}. Se basa en la transferencia de representaciones de recursos, que son identificados por \glslink{URI}{URIs}, y la manipulación de estos recursos mediante métodos estándar de \gls{HTTP}. Para una descripción detallada, leer el \href{https://www.ics.uci.edu/~fielding/pubs/dissertation/rest_arch_style.htm}{quinto capítulo de la tesis doctoral de Roy Fielding}}
}

\newglossaryentry{ETL}{
	text={ETL},
	name={ETL (\textit{Extract, Transform, Load})},
	description={Proceso utilizado en la integración de datos, que consiste en extraer datos de múltiples fuentes, realizar sobre ellos las transformaciones necesarias y cargarlos en un destino}
}

\newglossaryentry{URI}{
	text={URI},
	name={URI (\textit{Uniform Resource Identifier})},
	description={Cadena de caracteres con estructura fija que identifica un recurso en la web de forma única}
}

\newglossaryentry{HTTP}{
	text={HTTP},
	name={HTTP (\textit{Hypertext Transfer Protocol})},
	description={Protocolo de comunicación que permite la transferencia de información en la web, caracterizado por operar sin estado y basado en el modelo cliente-servidor}
}


\newglossaryentry{isort}{
	name={isort},
	description={Librería o utilidad de Python que alfabetiza las importaciones en el código fuente y las separa por tipo, de acuerdo con su \href{https://pycqa.github.io/isort/}{página de web}}
}

\newglossaryentry{black}{
	name={black},
	description={Librería o utilidad de Python que formatea automáticamente el código fuente usando un estilo consistente con cualquier otro código fuente formateado con black, de acuerdo con su \href{https://black.readthedocs.io/en/stable/}{página de web}}
}

\newglossaryentry{SonarLint}{
	name={SonarLint},
	description={Extensión de análisis estático de código que se integra en el editor o IDE para detectar problemas de calidad en el código y proponer correcciones}
}

\newglossaryentry{formateador}{
	name={formateador},
	description={Herramienta que modifica automáticamente el código fuente para que siga convenciones de estilo predefinidas}
}

\newglossaryentry{linter}{
	name={linter},
	description={Herramienta que analiza el código fuente para encontrar errores, malas prácticas o incumplimientos de convenciones de estilo}
}

\newglossaryentry{doctest}{
	name={doctest},
	description={Módulo en Python que permite probar fragmentos de código incluidos en los \glslink{docstring}{docstrings}, validando que la salida coincida con los ejemplos dados}
}

\newglossaryentry{pruebas unitarias}{
	name={pruebas unitarias},
	description={Pruebas automáticas que se enfocan en verificar el correcto funcionamiento de las unidades más pequeñas de un programa, como funciones o métodos individuales}
}

\newglossaryentry{hook}{
	name={hook},
	description={En Git, es un script que se ejecuta automáticamente en momentos específicos del flujo de trabajo, como antes de hacer un commit o un push}
}

\newglossaryentry{Git}{
	name={Git},
	description={Sistema de control de versiones distribuido}
}

\newglossaryentry{pipeline}{
	name={pipeline},
	description={Flujo de automatización en el que se definen una serie de pasos o tareas que deben ejecutarse de manera secuencial o en paralelo}
}

\newglossaryentry{SonarQube}{
	name={SonarQube},
	description={Plataforma que realiza análisis estático de código para detectar vulnerabilidades, errores y problemas de mantenimiento en proyectos de software}
}

\newglossaryentry{perfil de calidad}{
	name={perfil de calidad},
	description={Conjunto de reglas y configuraciones que definen los estándares de calidad del código}
}

\newglossaryentry{CAPP}{
	text={CAPP},
	name={CAPP (Currículum, Asesoría y Planeación de Programas)},
	description={Sistema de información de la Universidad de los Andes que determina si un estudiante satisface los requisitos para graduarse de un programa académico}
}

\newglossaryentry{Azure Blob Storage}{
	name={Azure Blob Storage},
	description={Servicio de almacenamiento de objetos en la nube de Microsoft Azure. Más información en su \href{https://azure.microsoft.com/es-es/services/storage/blobs/}{página oficial}}
}

\newglossaryentry{JSON}{
	text={JSON},
	name={JSON (\textit{JavaScript Object Notation})},
	description={Notación de objetos de JavaScript, un formato ligero de intercambio de datos que es fácil de leer y escribir para humanos y fácil de analizar y generar para máquinas}
}

\newglossaryentry{UML}{
	text={UML},
	name={UML (\textit{Unified Modeling Language})},
	description={Lenguaje unificado de modelado, un lenguaje estándar para visualizar, especificar, construir y documentar los artefactos de un sistema de software}
}
